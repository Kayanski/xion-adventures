
wasm:
    docker run --rm -v "$(pwd)":/code \
    --mount type=volume,source="$(basename "$(pwd)")_cache",target=/target \
    --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
    cosmwasm/optimizer:0.16.1

# Generate the schemas for the contracts
schema:
  sh scripts/schema.sh

# Generate the schemas for this app and publish them to the schemas repository for access in the Abstract frontend
publish-schemas namespace name version: schema
  #!/usr/bin/env bash
  set -euxo pipefail

  # Pre-run check for 'gh' CLI tool
  if ! command -v gh &> /dev/null; then \
    echo "'gh' could not be found. Please install GitHub CLI."; exit; \
  fi

  # check that the metadata exists
  if [ ! -e "./contracts/{{name}}/metadata.json" ]; then \
    echo "Please create metadata.json for module metadata"; exit; \
  fi

  tmp_dir="$(mktemp -d)"
  schema_out_dir="$tmp_dir/{{namespace}}/{{name}}/"
  contract_path="$(cargo tree -e normal -i {{name}} | cut -d '(' -f2 | cut -d ')' -f1)"

  # Clone the repository to the temporary directory
  git clone https://github.com/AbstractSDK/schemas "$tmp_dir"

  # Create target directory structure and copy schemas
  mkdir -p "$schema_out_dir"
  cp -a "./schema/{{name}}/{{version}}" "$schema_out_dir"

  # Copy metadata.json to the target directory
  cp "$contract_path/metadata.json" "$schema_out_dir"

  # Create a new branch with a name based on the inputs
  cd "$tmp_dir"
  git checkout -b '{{namespace}}/{{name}}/{{version}}'

  # Stage all new and changed files for commit
  git add .

  # Commit the changes with a message
  git commit -m 'Add schemas for {{namespace}} {{name}} {{version}}'

  # Create a pull request using 'gh' CLI tool
  gh pr create --title 'Add schemas for {{namespace}} {{name}} {{version}}' --body ""
