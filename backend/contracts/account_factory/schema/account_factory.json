{
  "contract_name": "account_factory",
  "contract_version": "0.1.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "account_code_id"
    ],
    "properties": {
      "account_code_id": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      }
    },
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "create_account"
        ],
        "properties": {
          "create_account": {
            "type": "object",
            "required": [
              "install_modules",
              "salt"
            ],
            "properties": {
              "account_id": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/AccountId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "install_modules": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ModuleInstallConfig"
                }
              },
              "salt": {
                "$ref": "#/definitions/Binary"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "no_msg"
        ],
        "properties": {
          "no_msg": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "AccountId": {
        "description": "Unique identifier for an account. On each chain this is unique.",
        "type": "object",
        "required": [
          "seq",
          "trace"
        ],
        "properties": {
          "seq": {
            "description": "Unique identifier for the accounts create on a local chain. Is reused when creating an interchain account.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "trace": {
            "description": "Sequence of the chain that triggered the IBC account creation `AccountTrace::Local` if the account was created locally Example: Account created on Juno which has an abstract interchain account on Osmosis, which in turn creates an interchain account on Terra -> `AccountTrace::Remote(vec![\"juno\", \"osmosis\"])`",
            "allOf": [
              {
                "$ref": "#/definitions/AccountTrace"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "AccountTrace": {
        "description": "The identifier of chain that triggered the account creation",
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "local"
            ]
          },
          {
            "type": "object",
            "required": [
              "remote"
            ],
            "properties": {
              "remote": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/TruncatedChainId"
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Binary": {
        "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
        "type": "string"
      },
      "ModuleInfo": {
        "description": "Stores the namespace, name, and version of an Abstract module.",
        "type": "object",
        "required": [
          "name",
          "namespace",
          "version"
        ],
        "properties": {
          "name": {
            "description": "Name of the contract",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace of the module",
            "allOf": [
              {
                "$ref": "#/definitions/Namespace"
              }
            ]
          },
          "version": {
            "description": "Version of the module",
            "allOf": [
              {
                "$ref": "#/definitions/ModuleVersion"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ModuleInstallConfig": {
        "description": "Module info and init message",
        "type": "object",
        "required": [
          "module"
        ],
        "properties": {
          "init_msg": {
            "anyOf": [
              {
                "$ref": "#/definitions/Binary"
              },
              {
                "type": "null"
              }
            ]
          },
          "module": {
            "$ref": "#/definitions/ModuleInfo"
          }
        },
        "additionalProperties": false
      },
      "ModuleVersion": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "latest"
            ]
          },
          {
            "type": "object",
            "required": [
              "version"
            ],
            "properties": {
              "version": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Namespace": {
        "description": "Represents an Abstract namespace for modules",
        "type": "string"
      },
      "TruncatedChainId": {
        "description": "The name of a chain, aka the chain-id without the post-fix number. ex. `cosmoshub-4` -> `cosmoshub`, `juno-1` -> `juno`",
        "type": "string"
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "type": "string",
    "enum": []
  },
  "migrate": null,
  "sudo": null,
  "responses": {}
}
